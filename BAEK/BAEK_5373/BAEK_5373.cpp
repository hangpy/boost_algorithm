// BAEK_5373. 큐빙

#include <iostream>
#include <cstring>

using namespace std;

char cube[54] = {
	'w','w','w','w','w','w','w','w','w', // U
	'y','y','y','y','y','y','y','y','y', // D
	'r','r','r','r','r','r','r','r','r', // F
	'o','o','o','o','o','o','o','o','o', // B
	'g','g','g','g','g','g','g','g','g', // L
	'b','b','b','b','b','b','b','b','b'  // R
};
// p: +, m: -
int up[2][20]= {
	{0,1,2,5,8,7,6,3,20,19,18,44,41,38,33,34,35,45,48,51},
	{2,5,8,7,6,3,0,1,44,41,38,33,34,35,45,48,51,20,19,18}
};
int um[2][20] = {
	{0,3,6,7,8,5,2,1,18,19,20,51,48,45,35,34,33,38,41,44},
	{6,7,8,5,2,1,0,3,51,48,45,35,34,33,38,41,44,18,19,20}
};
int dp[2][20] = {
	{9,10,11,14,17,16,15,12,24,25,26,53,50,47,29,28,27,36,39,42},
	{11,14,17,16,15,12,9,10,53,50,47,29,28,27,36,39,42,24,25,26}
};
int dm[2][20] = {
	{11,10,9,12,15,16,17,14,26,25,24,42,39,36,27,28,29,47,50,53},
	{9,12,15,16,17,14,11,10,42,39,36,27,28,29,47,50,53,26,25,24}
};
int fp[2][20] = {
	{18,19,20,23,26,25,24,21,6,7,8,51,52,53,11,10,9,42,43,44},
	{20,23,26,25,24,21,18,19,51,52,53,11,10,9,42,43,44,6,7,8}
};
int fm[2][20] = {
	{20,19,18,21,24,25,26,23,8,7,6,44,43,42,9,10,11,53,52,51},
	{18,21,24,25,26,23,20,19,44,43,42,9,10,11,53,52,51,8,7,6}
};
int bp[2][20] = {
	{27,28,29,32,35,34,33,30,2,1,0,38,37,36,15,16,17,47,46,45},
	{29,32,35,34,33,30,27,28,38,37,36,15,16,17,47,46,45,2,1,0}
};
int bm[2][20] = {
	{29,28,27,30,33,34,35,32,0,1,2,45,46,47,17,16,15,36,37,38},
	{27,30,33,34,35,32,29,28,45,46,47,17,16,15,36,37,38,0,1,2}
};
int lp[2][20] = {
	{36,37,38,41,44,43,42,39,27,30,33,0,3,6,18,21,24,9,12,15},
	{38,41,44,43,42,39,36,37,0,3,6,18,21,24,9,12,15,27,30,33}
};
int lm[2][20] = {
	{38,37,36,39,42,43,44,41,15,12,9,24,21,18,6,3,0,33,30,27},
	{36,39,42,43,44,41,38,37,24,21,18,6,3,0,33,30,27,15,12,9}
};
int rp[2][20] = {
	{45,46,47,50,53,52,51,48,17,14,11,26,23,20,8,5,2,35,32,29},
	{47,50,53,52,51,48,45,46,26,23,20,8,5,2,35,32,29,17,14,11}
};
int rm[2][20] = {
	{47,46,45,48,51,52,53,50,29,32,35,2,5,8,20,23,26,11,14,17},
	{45,48,51,52,53,50,47,46,2,5,8,20,23,26,11,14,17,29,32,35}
};

int main()
{
	ios::sync_with_stdio(0); cin.tie(0);
	int T; cin >> T;

	for (int t = 1; t <= T; t++)
	{
		char backup[54] = {};
		memcpy(backup, cube, sizeof cube);
		int N; cin >> N;
		for (int i = 0; i < N; i++)
		{
			char copied[54];
			memcpy(copied, cube, sizeof cube);
			char side, d; cin >> side >> d;

			if (side == 'U' && d == '+')
				for (int k = 0; k < 20; k++) cube[up[1][k]] = copied[up[0][k]];
			if (side == 'U' && d == '-')
				for (int k = 0; k < 20; k++) cube[um[1][k]] = copied[um[0][k]];
			if (side == 'D' && d == '+')
				for (int k = 0; k < 20; k++) cube[dp[1][k]] = copied[dp[0][k]];
			if (side == 'D' && d == '-')
				for (int k = 0; k < 20; k++) cube[dm[1][k]] = copied[dm[0][k]];
			if (side == 'F' && d == '+')
				for (int k = 0; k < 20; k++) cube[fp[1][k]] = copied[fp[0][k]];
			if (side == 'F' && d == '-')
				for (int k = 0; k < 20; k++) cube[fm[1][k]] = copied[fm[0][k]];
			if (side == 'B' && d == '+')
				for (int k = 0; k < 20; k++) cube[bp[1][k]] = copied[bp[0][k]];
			if (side == 'B' && d == '-')
				for (int k = 0; k < 20; k++) cube[bm[1][k]] = copied[bm[0][k]];
			if (side == 'L' && d == '+')
				for (int k = 0; k < 20; k++) cube[lp[1][k]] = copied[lp[0][k]];
			if (side == 'L' && d == '-')
				for (int k = 0; k < 20; k++) cube[lm[1][k]] = copied[lm[0][k]];
			if (side == 'R' && d == '+')
				for (int k = 0; k < 20; k++) cube[rp[1][k]] = copied[rp[0][k]];
			if (side == 'R' && d == '-')
				for (int k = 0; k < 20; k++) cube[rm[1][k]] = copied[rm[0][k]];
		}

		for (int i = 0; i < 3; i++) cout << cube[i]; cout << endl;
		for (int i = 3; i < 6; i++) cout << cube[i]; cout << endl;
		for (int i = 6; i < 9; i++) cout << cube[i]; cout << endl;

		memcpy(cube, backup, sizeof cube);
	}
	return 0;
}
